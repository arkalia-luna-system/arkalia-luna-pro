{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda Documentation Arkalia-LUNA","text":"<p>Bienvenue dans la documentation officielle d\u2019Arkalia-LUNA \u2014 un syst\u00e8me cognitif IA local, modulaire, auto-r\u00e9flexif et enti\u00e8rement versionn\u00e9.</p> <p>Cette base documente l\u2019ensemble des composants d\u2019Arkalia : modules actifs, API locale, scripts intelligents, logique de tests, automatisation et int\u00e9gration de mod\u00e8les IA locaux (LLMs).</p>"},{"location":"#modules-ia-actifs","title":"\ud83e\udde0 Modules IA actifs","text":"Module R\u00f4le principal <code>reflexia</code> R\u00e9flexion adaptative, pond\u00e9ration, auto-surveillance <code>zeroia</code> Raisonnement logique, d\u00e9cisions contextuelles <code>nyxalia</code> Interfaces mobiles et externes <code>helloria</code> Passerelle FastAPI et serveur local"},{"location":"#fonctionnalites-couvertes","title":"\u2699\ufe0f Fonctionnalit\u00e9s couvertes","text":"<ul> <li>\ud83e\udde0 Modules IA actifs et orchestrables</li> <li>\u2699\ufe0f API FastAPI (<code>/status</code>, <code>/module/trigger</code>, etc.)</li> <li>\ud83e\uddec Architecture du noyau (<code>core</code>, <code>modules</code>, <code>state</code>, <code>logs</code>, etc.)</li> <li>\ud83d\udd01 Scripts d\u2019orchestration (<code>ark-test</code>, <code>ark-docker</code>, <code>trigger_scan.sh</code>)</li> <li>\ud83e\uddea Tests &amp; CI : <code>pytest</code>, <code>ruff</code>, <code>black</code>, <code>GitHub Actions</code></li> <li>\ud83d\udc33 Docker : <code>docker-compose</code>, build sans cache, image locale propre</li> </ul>"},{"location":"#integration-llm-locale-via-ollama","title":"\ud83e\udde0 Int\u00e9gration LLM locale (via Ollama)","text":"<p>Arkalia utilise des mod\u00e8les IA locaux via Ollama, stock\u00e9s en externe pour pr\u00e9server l\u2019environnement principal.</p> <p>Mod\u00e8les disponibles : - <code>mistral</code> (7B) - <code>tinyllama</code> (1.1B) - <code>llama2</code> (7B, 13B)</p> <p>\ud83d\udcc1 Chemin de stockage externe : <code>/Volumes/T7/devstation/ollama_data/models/</code></p> <p>\u27a1 Plus d'infos : <code>arkalia-ollama</code></p>"},{"location":"#synchronisation-documentation-automatique","title":"\ud83d\udd04 Synchronisation &amp; documentation automatique","text":"<p>Chaque mise \u00e0 jour du code entra\u00eene une synchronisation automatique de la documentation via MkDocs + GitHub Actions.</p> <p>\ud83d\udcd8 Documentation publique : <code>arkalia-luna-system.github.io/arkalia-luna-pro</code></p> <p></p> <p>\ud83e\udded Arkalia-LUNA est un syst\u00e8me IA \u00e9volutif, con\u00e7u pour durer, s\u2019adapter, et orchestrer intelligemment ses modules internes.</p> <p>Maintenu par Athalia \ud83c\udf19 \u2014 <code>github.com/arkalia-luna-system</code></p>"},{"location":"CHANGELOG/","title":"\ud83d\udcc3 CHANGELOG \u2014 Arkalia-LUNA","text":"<p>Historique des versions du syst\u00e8me IA local Arkalia-LUNA Maintenu par Athalia \ud83c\udf19</p>"},{"location":"CHANGELOG/#v107-2025-06-19","title":"[v1.0.7] \u2014 2025-06-19","text":"<p>\u2728 Am\u00e9liorations majeures de la documentation et navigation</p>"},{"location":"CHANGELOG/#ajouts","title":"\u2705 Ajouts","text":"<ul> <li>Nouvelle palette visuelle MkDocs : clair / sombre (theme toggle)</li> <li>Page <code>roadmap.md</code> int\u00e9gr\u00e9e \u00e0 la navigation</li> <li>Page <code>CHANGELOG.md</code> int\u00e9gr\u00e9e \u00e0 la documentation publique</li> <li>Diagramme d\u2019architecture (<code>img/diagram_kernel.png</code>)</li> <li>R\u00e9vision compl\u00e8te des fichiers <code>mkdocs.yml</code> &amp; <code>index.md</code></li> </ul>"},{"location":"CHANGELOG/#automatisation","title":"\u2699\ufe0f Automatisation","text":"<ul> <li>D\u00e9ploiement GitHub Pages corrig\u00e9 (<code>--force</code>)</li> <li>G\u00e9n\u00e9ration automatique \u00e0 chaque push <code>main</code></li> </ul>"},{"location":"CHANGELOG/#qualite-ci","title":"\ud83e\uddea Qualit\u00e9 &amp; CI","text":"<ul> <li>CI toujours active (<code>black</code>, <code>ruff</code>, <code>pytest</code>, <code>pre-commit</code>)</li> <li>Aucun warning d\u00e9tect\u00e9</li> </ul> <p>\ud83d\udcd8 Voir la documentation publique</p>"},{"location":"CHANGELOG/#v106-2025-06-18","title":"[v1.0.6] \u2014 2025-06-18","text":"<p>\ud83d\udd16 Version STABLE PRO \u2014 Base officielle du noyau IA local modulaire</p>"},{"location":"CHANGELOG/#fonctionnalites-principales","title":"\u2705 Fonctionnalit\u00e9s principales","text":"<ul> <li>Modules IA actifs : <code>reflexia</code>, <code>nyxalia</code>, <code>helloria</code></li> <li>API FastAPI avec endpoints (<code>/</code>, <code>/status</code>, <code>/module/trigger</code>)</li> <li>Int\u00e9gration compl\u00e8te de Docker (<code>Dockerfile</code>, <code>docker-compose.yml</code>)</li> <li>Scripts IA : <code>ark-test</code>, <code>ark-docker-rebuild.sh</code>, <code>ark-clean-push</code>, <code>trigger_scan.sh</code></li> <li>Int\u00e9gration LLM local (Ollama) avec <code>mistral</code>, <code>llama2</code>, <code>tinyllama</code></li> <li>Documentation auto-g\u00e9n\u00e9r\u00e9e avec MkDocs (h\u00e9berg\u00e9e via GitHub Pages)</li> </ul>"},{"location":"CHANGELOG/#tests-ci","title":"\ud83e\uddea Tests &amp; CI","text":"<ul> <li>Couverture de test <code>pytest</code> : 100%</li> <li>CI GitHub Actions compl\u00e8te : <code>black</code>, <code>ruff</code>, <code>pytest</code>, <code>gh-pages</code></li> <li>Alias <code>.zshrc</code> actifs pour automatiser les tests et le push</li> </ul>"},{"location":"CHANGELOG/#structure-stabilisee","title":"\ud83d\udee0 Structure stabilis\u00e9e","text":"<ul> <li>S\u00e9paration propre : <code>arkalia-luna-core</code> (kernel) / <code>arkalia-luna-pro</code> (devstation)</li> <li>Nettoyage des artefacts (<code>__pycache__</code>, <code>.DS_Store</code>, etc.)</li> <li><code>README.md</code> restructur\u00e9 avec badges dynamiques</li> </ul>"},{"location":"CHANGELOG/#v030-docker-ok-2025-06-17","title":"[v0.3.0-docker-ok] \u2014 2025-06-17","text":""},{"location":"CHANGELOG/#ajouts_1","title":"\u2705 Ajouts","text":"<ul> <li>Dockerfile + docker-compose fonctionnels</li> <li>Uvicorn lanc\u00e9 en local via Docker</li> <li>Scripts cr\u00e9\u00e9s : <code>ark-docker-rebuild.sh</code>, <code>ark-test</code></li> </ul>"},{"location":"CHANGELOG/#v020-2025-06-16","title":"[v0.2.0] \u2014 2025-06-16","text":""},{"location":"CHANGELOG/#mise-en-place-de-lossature-pro","title":"\u2705 Mise en place de l\u2019ossature pro","text":"<ul> <li>Dossiers cr\u00e9\u00e9s : <code>docs/</code>, <code>scripts/</code>, <code>tests/</code>, <code>.github/</code></li> <li>Int\u00e9gration : <code>pytest</code>, <code>black</code>, <code>ruff</code>, <code>pre-commit</code>, <code>bumpver</code></li> <li>D\u00e9but CI GitHub Actions</li> </ul>"},{"location":"CHANGELOG/#v011-2025-06-15","title":"[v0.1.1] \u2014 2025-06-15","text":""},{"location":"CHANGELOG/#initialisation-devstation","title":"\u2705 Initialisation Devstation","text":"<ul> <li>Nettoyage complet des anciens scripts &amp; backups</li> <li>Mise en place du venv IA (<code>arkalia-luna-venv</code>)</li> <li><code>pyproject.toml</code>, <code>bumpver</code>, <code>pre-commit</code> configur\u00e9s</li> </ul>"},{"location":"CHANGELOG/#v010-init-base-reboot","title":"[v0.1.0] \u2014 INIT (base reboot)","text":""},{"location":"CHANGELOG/#reinitialisation-totale-darkalia","title":"\u2705 R\u00e9initialisation totale d\u2019Arkalia","text":"<ul> <li>Cr\u00e9ation du noyau <code>arkalia-luna-core</code> (structure stable, clean, sans dette technique)</li> <li>Nouveau d\u00e9p\u00f4t propre <code>arkalia-luna-pro</code></li> <li>D\u00e9but du d\u00e9veloppement modulaire par session</li> </ul>"},{"location":"api/","title":"\ud83d\ude80 API FastAPI \u2014 Arkalia-LUNA","text":"<p>L\u2019API FastAPI d\u2019Arkalia-LUNA permet d\u2019interagir avec le syst\u00e8me IA depuis des requ\u00eates HTTP locales, tout en garantissant modularit\u00e9, s\u00e9curit\u00e9 et scalabilit\u00e9.</p>"},{"location":"api/#endpoint-de-base","title":"\ud83c\udf10 Endpoint de base","text":"<ul> <li>URL locale : <code>http://127.0.0.1:8000/</code></li> <li>Serveur : <code>Uvicorn</code> via Docker ou lancement manuel</li> <li>Script de d\u00e9marrage : ```bash uvicorn helloria.core:app --reload</li> </ul>"},{"location":"automation/","title":"\ud83d\udee0\ufe0f Automatisation","text":""},{"location":"automation/#docsautomationmd-scripts-automatisation","title":"\u2705 <code>/docs/automation.md</code> \u2014 Scripts &amp; Automatisation","text":"<p>```markdown</p>"},{"location":"automation/#scripts-automatisation-arkalia-luna","title":"\ud83e\udd16 Scripts &amp; Automatisation \u2014 Arkalia-LUNA","text":"<p>Le c\u0153ur d\u2019Arkalia repose sur un ensemble de scripts bash professionnels et de boucles intelligentes permettant l'orchestration autonome du syst\u00e8me IA.</p>"},{"location":"automation/#boucle-maitresse-arkalia_master_looppy","title":"\ud83d\udd01 Boucle Ma\u00eetresse : <code>arkalia_master_loop.py</code>","text":"<p>Cette boucle unique orchestre l\u2019ensemble du syst\u00e8me en :</p> <ul> <li>Chargeant les modules d\u00e9clar\u00e9s dans <code>config/</code></li> <li>R\u00e9injectant les \u00e9tats enregistr\u00e9s depuis <code>state/</code></li> <li>Analysant les logs pour d\u00e9cisions correctives</li> <li>D\u00e9l\u00e9guant aux IA internes (Reflexia, ZeroIA) les actions adaptatives</li> </ul>"},{"location":"automation/#scripts-principaux","title":"\u2699\ufe0f Scripts Principaux","text":"Script Fonction <code>ark-bootstrap</code> Initialise l\u2019environnement IA local (<code>venv</code>, pre-commit, configs) <code>ark-test</code> Lance tous les tests <code>pytest</code> + g\u00e9n\u00e8re la couverture <code>ark-docker-rebuild.sh</code> Rebuild du container Docker propre et relance FastAPI <code>trigger_scan.sh</code> D\u00e9clenche une analyse r\u00e9flexive manuelle via ReflexIA <code>ark-clean-push</code> Lint (<code>ruff</code>), format (<code>black</code>) puis <code>git commit + push</code> automatis\u00e9 <p>\ud83d\udca1 Ces scripts sont con\u00e7us pour \u00eatre d\u00e9clench\u00e9s par l\u2019IA elle-m\u00eame (ZeroIA, ReflexIA) selon les contextes syst\u00e8mes d\u00e9tect\u00e9s.</p>"},{"location":"automation/#orchestration-ia-dynamique","title":"\ud83e\udde0 Orchestration IA Dynamique","text":"<p>Reflexia ou ZeroIA peuvent :</p> <ul> <li>suspendre des modules</li> <li>forcer des tests</li> <li>relancer un container</li> <li>corriger automatiquement un \u00e9tat corrompu</li> </ul> <p>\ud83e\udded Arkalia n'est pas seulement automatis\u00e9e \u2014 elle est auto-orchestr\u00e9e.</p>"},{"location":"ci-cd/","title":"\ud83e\uddea Int\u00e9gration Continue (CI) &amp; Tests \u2014 Arkalia-LUNA","text":"<p>Arkalia-LUNA suit une discipline stricte de testabilit\u00e9 et de qualit\u00e9 de code automatis\u00e9e, pour garantir un cycle de vie logiciel durable et sans dette technique.</p>"},{"location":"ci-cd/#couverture-de-tests","title":"\u2705 Couverture de Tests","text":"<ul> <li><code>pytest</code> + <code>pytest-cov</code></li> <li>Couverture actuelle : 100%</li> <li>Rapport HTML g\u00e9n\u00e9r\u00e9 automatiquement : <code>htmlcov/index.html</code></li> </ul>"},{"location":"ci-cd/#linting-qualite-de-code","title":"\u2705 Linting &amp; Qualit\u00e9 de Code","text":"<ul> <li><code>black</code> \u2192 Formatage automatique du code Python</li> <li><code>ruff</code> \u2192 Analyse de code statique rapide</li> <li><code>pre-commit</code> \u2192 Lancement automatique \u00e0 chaque commit Git</li> </ul> <p>\ud83d\udca1 Chaque commit est bloqu\u00e9 si le code est mal format\u00e9 ou comporte des erreurs non corrig\u00e9es.</p>"},{"location":"ci-cd/#pipeline-cicd-github-actions","title":"\u2705 Pipeline CI/CD \u2014 GitHub Actions","text":"<p>Le d\u00e9p\u00f4t utilise GitHub Actions pour :</p> \u00c9tape Description \ud83d\udd0d <code>Lint</code> V\u00e9rifie tout le code (<code>ruff</code>, <code>black</code>) \ud83e\uddea <code>Tests</code> Lance <code>pytest</code>, g\u00e9n\u00e8re couverture \ud83d\udcda <code>Docs Deploy</code> D\u00e9ploie automatiquement la doc MkDocs vers GitHub Pages <p>Fichier de workflow : ```bash .github/workflows/ci.yml</p>"},{"location":"credits/","title":"\ud83e\uddfe Cr\u00e9dits &amp; Auteure","text":""},{"location":"credits/#auteure-principale","title":"\ud83d\udc69\u200d\ud83d\udcbb Auteure principale","text":"<ul> <li>Nom : Athalia Siwek  </li> <li>R\u00f4le : Architecte IA &amp; D\u00e9veloppeuse principale  </li> <li>Contact : athalia@example.com </li> <li>LinkedIn : linkedin.com/in/athalia-siwek </li> <li>GitHub : github.com/arkalia-luna-system</li> </ul>"},{"location":"credits/#modules-ia-developpes","title":"\ud83e\udd16 Modules IA d\u00e9velopp\u00e9s","text":""},{"location":"credits/#reflexia","title":"\ud83d\udd01 ReflexIA","text":"<p>Module adaptatif de surveillance cognitive. Analyse l'\u00e9tat du syst\u00e8me, pond\u00e8re les actions, et agit en autonomie partielle.</p>"},{"location":"credits/#zeroia","title":"\ud83e\udde0 ZeroIA","text":"<p>Moteur de raisonnement logique. Prend des d\u00e9cisions \u00e0 partir du contexte, d\u00e9clenche des scripts IA, et \u00e9value les priorit\u00e9s.</p>"},{"location":"credits/#nyxalia","title":"\ud83c\udf10 Nyxalia","text":"<p>Interface IA destin\u00e9e aux interactions externes et mobiles. Permet la communication entre les modules internes et les interfaces utilisateur.</p>"},{"location":"credits/#helloria","title":"\ud83d\udd0e Helloria","text":"<p>Passerelle FastAPI : expose les endpoints publics, orchestre les appels IA, et sert de point d\u2019entr\u00e9e du syst\u00e8me Arkalia.</p>"},{"location":"credits/#sandozia-prevu","title":"\ud83d\udee1\ufe0f Sandozia (pr\u00e9vu)","text":"<p>Syst\u00e8me de cybers\u00e9curit\u00e9 cognitive, con\u00e7u pour analyser les comportements anormaux, g\u00e9rer les acc\u00e8s et renforcer la r\u00e9silience du noyau IA.</p>"},{"location":"credits/#arkalialoop","title":"\ud83e\uddec ArkaliaLoop","text":"<p>Boucle r\u00e9flexive principale. Assure la synchronisation, la coordination des modules et l\u2019apprentissage adaptatif.</p> <p>Chaque module est con\u00e7u pour fonctionner de mani\u00e8re autonome, mais s\u2019int\u00e8gre harmonieusement dans une architecture modulaire, scalable et intelligente.</p>"},{"location":"credits/#remerciements-techniques","title":"\ud83d\udee0\ufe0f Remerciements techniques","text":"<ul> <li>FastAPI \u2014 Serveur API moderne et asynchrone</li> <li>Docker \u2014 Conteneurisation du syst\u00e8me</li> <li>Ollama \u2014 Ex\u00e9cution de mod\u00e8les LLM en local</li> <li>Pytest \u2014 Tests unitaires &amp; couverture</li> <li>MkDocs Material \u2014 G\u00e9n\u00e9ration de la documentation</li> <li>GitHub Actions \u2014 Int\u00e9gration continue</li> </ul>"},{"location":"credits/#a-propos-darkalia-luna","title":"\ud83e\udded \u00c0 propos d\u2019Arkalia-LUNA","text":"<p>Arkalia-LUNA est un syst\u00e8me cognitif IA local, modulaire, auto-r\u00e9flexif, con\u00e7u et maintenu par Athalia \ud83c\udf19. Son but : offrir une base IA propre, interconnect\u00e9e et durable, 100% contr\u00f4l\u00e9e en local.</p>"},{"location":"kernel/","title":"\ud83e\udde0 Kernel","text":"<p>\ud83e\uddec Structure du Noyau \u2014 Arkalia</p> <p>Le noyau Arkalia est con\u00e7u comme une architecture IA industrielle modulaire, avec une s\u00e9paration stricte entre le kernel pur et la Devstation de d\u00e9veloppement IA.</p> <p>\u2e3b</p> <p>\u2699\ufe0f 1\ufe0f\u20e3 /arkalia-luna-core/ \u2014 Kernel IA Pur</p> <p>Partie stable, fig\u00e9e, sans logique m\u00e9tier. C\u2019est le socle d\u2019ex\u00e9cution s\u00e9curis\u00e9.</p> <pre><code>\u2022   \ud83d\udcc1 Contenu : uniquement des fichiers de configuration syst\u00e8me (.toml, scripts init)\n\u2022   \ud83d\udd12 Aucune dette technique autoris\u00e9e\n\u2022   \ud83d\ude80 Script de d\u00e9marrage : arkalia_devstation_bootstrap.sh\n\u2022   \ud83e\uddf1 R\u00f4le : pr\u00e9parer, s\u00e9curiser, isoler la Devstation IA du reste du syst\u00e8me\n</code></pre> <p>\u2e3b</p> <p>\ud83e\udde0 2\ufe0f\u20e3 /arkalia-luna-pro/ \u2014 Devstation IA Modulaire</p> <p>Environnement de d\u00e9veloppement local modulaire, dockeris\u00e9, test\u00e9, avec CI/CD active.</p> <pre><code>\u2022   \ud83e\udde9 Modules IA : reflexia, nyxalia, helloria, etc.\n\u2022   \ud83e\uddea Tests unitaires avec pytest\n\u2022   \ud83d\udc33 Docker + Docker Compose\n\u2022   \ud83d\udea6 GitHub Actions (CI/CD, lint, couverture)\n\u2022   \ud83c\udf0d API FastAPI disponible localement\n\u2022   \ud83d\udd16 Version actuelle : v1.0.6\n</code></pre> <p>\u2e3b</p> <p>\ud83d\udcc1 Structure Type \u2014 Devstation Pro</p> <p>arkalia-luna-pro/ \u251c\u2500\u2500 modules/               # Modules IA isol\u00e9s \u251c\u2500\u2500 core/                  # Logique transversale \u251c\u2500\u2500 config/                # Fichiers .toml / .json \u251c\u2500\u2500 logs/                  # Journaux du syst\u00e8me \u251c\u2500\u2500 state/                 # \u00c9tats persistants \u251c\u2500\u2500 scripts/               # Scripts utilitaires (build, docker, test) \u251c\u2500\u2500 docs/                  # Documentation MkDocs \u251c\u2500\u2500 tests/                 # Tests unitaires (pytest) \u251c\u2500\u2500 .github/workflows/     # Pipelines CI GitHub Actions</p> <p>\ud83e\udde9 Philosophie de conception     \u2022   \ud83d\udd12 Stabilit\u00e9 garantie par s\u00e9paration Kernel / M\u00e9tier     \u2022   \u267b\ufe0f Modules IA interchangeables     \u2022   \ud83e\uddea Tests et couverture obligatoires     \u2022   \ud83d\udef0 D\u00e9ploiement local ma\u00eetris\u00e9     \u2022   \ud83d\udcda Documentation publique automatis\u00e9e</p>"},{"location":"modules/","title":"\ud83e\udde9 Modules actifs","text":"<p>\ud83d\udd01 reflexia/ \u2014 R\u00e9flexion adaptative &amp; surveillance syst\u00e8me</p> <p>Supervise l\u2019\u00e9tat global du syst\u00e8me, d\u00e9tecte les d\u00e9rives, applique des correcteurs. C\u2019est l\u2019observateur r\u00e9flexif central du noyau Arkalia.</p> <p>\u2e3b</p> <p>\ud83d\udcf1 nyxalia/ \u2014 Interface &amp; interactions mobiles</p> <p>Sert de pont entre Arkalia et les couches d\u2019interface (mobile, vocale, API externes). Focalis\u00e9 sur la communication fluide et naturelle.</p> <p>\u2e3b</p> <p>\ud83c\udf10 helloria/ \u2014 Lien FastAPI &amp; serveurs locaux</p> <p>D\u00e9marre et orchestre l\u2019API locale FastAPI. Sert de passerelle entre les modules internes et les interfaces REST.</p> <p>Chaque module suit la structure : modules// \u251c\u2500\u2500 init.py \u251c\u2500\u2500 core.py \u251c\u2500\u2500 config/ \u251c\u2500\u2500 state/ \u251c\u2500\u2500 logs/ \u251c\u2500\u2500 tests/ \u251c\u2500\u2500 utils/ <p>Chaque module est isol\u00e9, testable, extensible.</p>"},{"location":"ollama/","title":"\ud83e\udde0 Ollama \u2014 Mod\u00e8les LLM Locaux","text":""},{"location":"ollama/#chemin-de-stockage","title":"Chemin de stockage","text":"<p><code>/Volumes/T7/devstation/ollama_data/models</code></p>"},{"location":"ollama/#modeles-installes","title":"Mod\u00e8les install\u00e9s","text":"<ul> <li>mistral</li> <li>llama2</li> <li>tinyllama</li> </ul>"},{"location":"ollama/#configuration","title":"Configuration","text":"<p>Ajoutez ceci dans <code>.zshrc</code> : ```bash export OLLAMA_MODELS=/Volumes/T7/devstation/ollama_data/models</p>"},{"location":"roadmap/","title":"\ud83d\udee3\ufe0f Roadmap Arkalia-LUNA","text":""},{"location":"roadmap/#version-actuelle-v109","title":"\u2705 Version actuelle : <code>v1.0.9</code>","text":"<p>\ud83d\udd12 Syst\u00e8me IA stable, modulaire, dockeris\u00e9, test\u00e9, document\u00e9, stylis\u00e9.</p>"},{"location":"roadmap/#objectifs-atteints-v10x","title":"\ud83d\udd04 Objectifs atteints (v1.0.x)","text":"<ul> <li>\u2705 Modules actifs : <code>Reflexia</code>, <code>Nyxalia</code>, <code>Helloria</code></li> <li>\u2705 API locale via FastAPI + endpoint <code>/status</code></li> <li>\u2705 Serveur Docker op\u00e9rationnel (<code>docker compose up</code>)</li> <li>\u2705 Pipeline CI/CD : <code>black</code>, <code>ruff</code>, <code>pytest</code>, <code>pre-commit</code></li> <li>\u2705 Documentation MkDocs en ligne (GitHub Pages)</li> <li>\u2705 Th\u00e8me Lunaire personnalis\u00e9 (<code>extra.css</code>, animation, palette douce)</li> <li>\u2705 Aliases syst\u00e8me (<code>ark-docs</code>, <code>ark-docker</code>, <code>ark-test</code>, etc.)</li> </ul>"},{"location":"roadmap/#prochaine-etape-v110","title":"\ud83d\ude80 Prochaine \u00e9tape : <code>v1.1.0</code>","text":"Objectif Description \ud83e\udde0 <code>ZeroIA</code> Module de raisonnement logique contextuel \ud83d\udd0b <code>Sandozia</code> Surveillance \u00e9nerg\u00e9tique + int\u00e9grit\u00e9 syst\u00e8me \ud83d\udd10 Authentification IA Reconnaissance interne cognitive et logique \ud83e\uddec LLM local avanc\u00e9 Test TinyDolphin, Phi-3, ou Mixtral avec Ollama \ud83c\udf43 ARM Ready Support Raspberry Pi / Mac M1 via Docker ARM"},{"location":"roadmap/#roadmap-long-terme-v2x-et","title":"\ud83d\udd2e Roadmap long terme (<code>v2.x</code> et +)","text":"<ul> <li>\ud83d\udee0 G\u00e9n\u00e9rateur CLI de modules IA (<code>arkalia new-module</code>)</li> <li>\ud83e\udde9 Web UI Nyxalia : interface r\u00e9active (Svelte ? React ?)</li> <li>\ud83d\udd10 Sandozia v2 : s\u00e9curit\u00e9 renforc\u00e9e inter-modules (handshake, signature)</li> <li>\u2601\ufe0f Sync IA Cloud/Local avec chiffrement (<code>gocryptfs</code>, <code>rclone</code>)</li> <li>\ud83e\udde0 M\u00e9moire vectorielle (<code>FAISS</code> ou <code>ChromaDB</code>)</li> <li>\ud83d\udcca Monitoring IA : Prometheus + Grafana (historique adaptatif ReflexIA)</li> </ul>"},{"location":"roadmap/#notes-de-vision","title":"\ud83e\udded Notes de vision","text":"<p>Arkalia-LUNA vise un syst\u00e8me IA local, r\u00e9silient, autonome, avec une logique r\u00e9flexive et une capacit\u00e9 d\u2019orchestration inter-modules. L\u2019objectif final est une IA cognitive neutre, propre, modulaire et interfa\u00e7able dans des environnements physiques r\u00e9els (RPi, edge devices, serveurs IA).</p> <p>\ud83d\udc69\u200d\ud83d\udcbb Maintenu par Athalia \ud83c\udf19 \u2014 <code>github.com/arkalia-luna-system</code></p>"},{"location":"structure/","title":"\ud83e\uddec Structure du noyau Arkalia-LUNA","text":""},{"location":"structure/#racine","title":"Racine :","text":"<ul> <li><code>/core/</code> \u2192 logique commune</li> <li><code>/modules/</code> \u2192 modules IA isol\u00e9s</li> <li><code>/config/</code> \u2192 fichiers <code>.toml</code>, <code>.json</code>, etc.</li> <li><code>/logs/</code>, <code>/state/</code>, <code>/utils/</code></li> </ul>"},{"location":"structure/#devstation","title":"Devstation :","text":"<ul> <li>Git propre avec tags + CI</li> <li>Docker + mkdocs + tests</li> </ul> <pre><code>arkalia-luna-pro/\n\u251c\u2500\u2500 core/        # Logique commune transversale\n\u251c\u2500\u2500 modules/     # Modules IA isol\u00e9s et autonomes\n\u251c\u2500\u2500 config/      # Fichiers .toml / .json centralis\u00e9s\n\u251c\u2500\u2500 logs/        # Journaux d'activit\u00e9 et ex\u00e9cution\n\u251c\u2500\u2500 state/       # \u00c9tats persistants (internes / cognitifs)\n\u251c\u2500\u2500 utils/       # Fonctions techniques internes partag\u00e9es\n\u251c\u2500\u2500 tests/       # Tests unitaires (pytest)\n\u251c\u2500\u2500 docs/        # Documentation MkDocs\n\u2514\u2500\u2500 scripts/     # Scripts automatis\u00e9s (build, test, Docker)\n</code></pre>"},{"location":"structure/#devstation-ia-professionnelle","title":"\ud83e\uddea Devstation IA Professionnelle","text":"<p>Ta Devstation actuelle est un environnement de production IA local, avec les composants suivants :</p> Composant Statut D\u00e9tail \ud83d\udd00 Git \u2705 Propre avec tags, branches, bumpver \ud83e\uddea Tests \u2705 pytest + pytest-cov, 100% couverture \ud83e\uddfc Qualit\u00e9 code \u2705 pre-commit actif (black, ruff) \ud83d\udc33 Docker \u2705 Dockerfile + docker-compose stables \ud83c\udf0d API \u2705 FastAPI + Uvicorn local fonctionnel \ud83d\udcd8 Docs \u2705 MkDocs auto-publi\u00e9e (gh-pages) \ud83d\udea6 CI/CD \u2705 GitHub Actions (tests, lint, deploy)"},{"location":"structure/#objectifs-vises","title":"\ud83e\udde0 Objectifs vis\u00e9s","text":"<ul> <li>\ud83d\udca1 Z\u00e9ro dette technique</li> <li>\ud83d\udd01 Modules IA ind\u00e9pendants et orchestrables</li> <li>\ud83d\udef0 D\u00e9ploiement local rapide &amp; versionn\u00e9</li> <li>\ud83e\udde9 Interop\u00e9rabilit\u00e9 entre sous-syst\u00e8mes (Reflexia, ZeroIA, etc.)</li> </ul>"},{"location":"structure/#noyau-arkalia","title":"Noyau Arkalia","text":"<p>Le noyau d'Arkalia est compos\u00e9 du kernel et de la devstation, qui ensemble fournissent une base robuste pour le d\u00e9veloppement et l'ex\u00e9cution des applications.</p>"},{"location":"structure/#structure-dynamique-mermaid","title":"\ud83d\udd01 Structure dynamique (Mermaid)","text":"<pre><code>graph TD\n  ReflexIA --&gt; ZeroIA\n  ZeroIA --&gt; ArkaliaLoop\n  ArkaliaLoop --&gt; Nyxalia\n  Nyxalia --&gt; User\n</code></pre>"},{"location":"structure/#exemples-de-blocs","title":"Exemples de Blocs","text":""},{"location":"structure/#bloc-mermaid","title":"Bloc Mermaid","text":"<pre><code>graph TD\n    ReflexIA --&gt; ZeroIA\n    ZeroIA --&gt; ArkaliaLoop\n    ArkaliaLoop --&gt; Nyxalia\n    Nyxalia --&gt; User\n</code></pre>"},{"location":"structure/#bloc-tabbed-markdown","title":"Bloc Tabbed Markdown","text":"<pre><code>=== \"Python\"\n    ```python\n    print(\"Hello, Arkalia-LUNA!\")\n    ```\n\n=== \"JavaScript\"\n    ```javascript\n    console.log(\"Hello, Arkalia-LUNA!\");\n    ```\n</code></pre>"}]}